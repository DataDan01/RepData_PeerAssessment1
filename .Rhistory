activitydata<-read.csv("activity.csv")
sum(activitydata$steps==0)
sum(activitydata$steps==0,na.rm=TRUE)
sum(activitydata$steps==1,na.rm=TRUE)
sum(activitydata$steps==2,na.rm=TRUE)
sum(activitydata$steps==0,na.rm=TRUE)
activitydata2<-activitydata
for(i in 1:nrow(activitydata2))
{
if(is.na(activitydata2$steps[i]))
{
k<-activitydata2$interval[i]
k<-as.character(k)
activitydata2$steps[i]=intervalmean[intervalmean=k]
}
}
intervalmean<-tapply(activitydata$steps,activitydata$interval,mean,na.rm=TRUE)
activitydata2<-activitydata
for(i in 1:nrow(activitydata2))
{
if(is.na(activitydata2$steps[i]))
{
k<-activitydata2$interval[i]
k<-as.character(k)
activitydata2$steps[i]=intervalmean[intervalmean=k]
}
}
sum(activitydata2$steps==0,na.rm=TRUE)
sum(activitydata$steps==0,na.rm=TRUE)
activitydata<-as.numeric(activitydata$steps)
activitydata<-read.csv("activity.csv")
activitydata<-cbind(as.numeric(activitydata$steps),activitydata$date,activitydata$interval)
View(activitydata)
activitydata<-read.csv("activity.csv")
class(activitydata$steps)
activitydata$steps<-as.numeric(activitydata$steps)
class(activitydata$steps)
class(activitydata$date)
class(activitydata$interval)
summary(activitydata)
sum(intervalmean==0,na.rm=TRUE)
list<-C("test",1,3L)
list<-("test",1,3L)
list<-as.list("test",1,3L)
list
class(list)
11166-11014
?weekdays
weekdays(activitydata$date[5])
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
View(activitydata3)
class(activitydata3$date)
!(weekdays(activitydata3$date) %in% c('Saturday','Sunday'))
weekends<-(weekdays(activitydata3$date) %in% c('Saturday','Sunday'))
activitydata3$date<-factor(weekends)
activitydata3<-activitydata
activitydata3<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday')
)
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3$date<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))
View(activitydata3)
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE))
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3$date<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE))
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3$weekday<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))
activitydata3$weekpart<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))
activitydata3<-activitydata
activitydata3$date<-as.POSIXlt(activitydata3$date)
activitydata3$weekpart<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))
4608/12960
2/7
4608+12960
plot(sin, -pi, 2*pi)
activitydataweekday<-activitydata3$weekpart=="weekday"
activitydataweekday<-activitydata3[activitydata3$weekpart=="weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart=="Weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart==Weekday]
activitydataweekday<-activitydata3[activitydata3$weekpart=='Weekday']
activitydataweekday<-activitydata3[activitydata3$weekpart=="weekday"]
View(activitydataweekday)
activitydataweekday<-activitydata3[weekpart=="weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart=="weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart=="Weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart=Weekday]
activitydataweekday<-activitydata3[activitydata3$weekpart="Weekday"]
activitydataweekday<-activitydata3[activitydata3$weekpart='Weekday']
activitydataweekday<-activitydata3[activitydata3$weekpart=='Weekday']
activitydataweekday<-activitydata3[activitydata3$weekpart=="Weekday"]
activitydataweekday<-subset(activitydata3,weekpart=="Weekday")
activitydataweekend<-subset(activitydata3,weekpart=="Weekend")
intervalmeanweekday<-tapply(activitydata3$steps,activitydata3$interval,mean,na.rm=TRUE)
intervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)
intervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Daily Activity Patterns",ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = NULL, ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = FALSE, ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
par(mfrow=c(2,1))
plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", ann = FALSE, ylab = "Interval Means")
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
library(lattice)
install.packages("lattice")
library(lattice)
xyplot (intervalmean ~ activitydata3 | graph, groups=weekday, data=dat, type="o",
layout=c(1, 2), as.table=T, xlab="Time (secs)", ylab="Price")
xyplot (intervalmean ~ activitydata3$interval | graph, groups=weekday, data=activitydata3, type="o",
layout=c(1, 2), as.table=T, xlab="Time (secs)", ylab="Price")
xyplot (intervalmean ~ activitydata3$interval | graph, groups=activitydata3$weekpart, data=activitydata3, type="o",
layout=c(1, 2), as.table=T, xlab="Time (secs)", ylab="Price")
install.packages("gridExtra")
library(gridExtra)
plot1<-plot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
plot2<-plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
grid.arrange(plot1, plot2, nrow=2)
par(mfrow=c(1,1))
plot(x=dimnames(intervalmeanweekend)[[1]],y=intervalmeanweekend,type="l", main = "Weekend Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
grid.arrange(plot1, plot2, nrow=2)
grid.arrange(plot1, plot2, ncol=2)
require(gridExtra)
plot1<-qplot(x=dimnames(intervalmeanweekday)[[1]],y=intervalmeanweekday,type="l", main = "Weekday Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
xyplot(x=activitydata3)
as.ts(activitydata3)
activitydata3<-as.ts(activitydata3)
xyplot(x=activitydata3)
head(intervalmeanweekday)
intervalmeanweekday<-as.matrix(intervalmeanweekday)
View(intervalmeanweekday)
intervalmeanweekend<-as.matrix(intervalmeanweekend)
intervalmeanweekday<-as.ts(intervalmeanweekday)
intervalmeanweekend<-as.ts(intervalmeanweekend)
head(intervalmeanweekday)
intervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)
intervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)
intervalmeanweekend<-as.ts(as.matrix(intervalmeanweekend))
head(intervalmeanweekday)
intervalmeanweekday<-as.ts(as.matrix(intervalmeanweekday))
intervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)
intervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)
intervalmeanweekday<-as.ts(as.matrix(intervalmeanweekday,dimnames="Weekday"))
intervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)
intervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)
intervalmeanweekday<-as.ts(as.matrix(intervalmeanweekday,dimnames="Weekday"),class="matrix")
intervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)
intervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)
mean(intervalmeanweekend)
mean(iintervalmeanweekday)
mean(intervalmeanweekday)
weekpartintervalmeans<-cbind(intervalmeanweekend,intervalmeanweekday)
View(weekpartintervalmeans)
weekpartintervalmeans<-as.ts(weekpartintervalmeans)
xyplot(weekpartintervalmeans)
xyplot(weekpartintervalmeans,xlab="Time Interval",ylab="Steps")
colnames(weekpartintervalmeans)[1]<-c("Weekend")
colnames(weekpartintervalmeans)[2]<-c("Weekday")
weekpartintervalmeans<-as.ts(weekpartintervalmeans)
xyplot(weekpartintervalmeans,xlab="Time Interval",ylab="Steps")
weekpartintervalmeans<-cbind(intervalmeanweekend,intervalmeanweekday)
class(weekpartintervalmeans)
allmedians2<-tapply(activitydata2$steps,activitydata2$date,median)
allmedians2
allmeans2<-tapply(activitydata2$steps,activitydata2$date,mean)
allmeans2
allmedians2<-data.frame(tapply(activitydata2$steps,activitydata2$date,median))
summary(allmedians2)
allmedians2
allmedians2<-data.frame(tapply(activitydata2$steps,activitydata2$date,median)dimnames=c("Date","Median"))
allmedians2<-data.frame(tapply(activitydata2$steps,activitydata2$date,median)dimnames=c(Date,Median))
class(allmedians)
allmedians<-tapply(activitydata$steps,activitydata$date,median,na.rm=TRUE)
class(allmedians)
write.table(allmedians)
class(allmedians)
write.table(allmedians,quote = FALSE)
write.table(allmedians,quote = FALSE,col.names=c("Date","Medians"))
write.table(allmedians,quote = FALSE,col.names=c("Date" "Medians"))
write.table(allmedians,quote = FALSE,col.names=("Date","Medians"))
write.table(allmedians,quote = FALSE,col.names=c(Date,Medians))
write.table(allmedians,quote = FALSE,col.names="Medians")
max(intervalmean)
levels(intervalmean)
intervalmean
max(intervalmean)
which.max(intervalmean)
intervalmean[835]
intervalmean[104]
which.max(intervalmean)
which.max(intervalmean)[1]
which.max(intervalmean)[[1]][[1]]
which.max(intervalmean)[[1]][[2]]
which.max(intervalmean)[[2]][[1]]
which.max(intervalmean)[[1]][[1]]
which.max(intervalmean)[[0]][[1]]
which.max(intervalmean)[[1]][[0]]
which.max(intervalmean)[[1]
which.max(intervalmean)[[1]]
which.max(intervalmean)[[1]]
which.max(intervalmean)[[2]]
which.max(intervalmean)[[0]]
class(which.max(intervalmean))
aatributes(which.max(intervalmean))
atributes(which.max(intervalmean))
attributes(which.max(intervalmean))
(which.max(intervalmean)$names)
(which.max(intervalmean)[names])
which.max(intervalmean)[names])
label(which.max(intervalmean))
library("hmisc")
install.packages("hmisc")
y
install.packages(hmisc)
install.packages('hmisc')
install.packages("Hmisc")
label(which.max(intervalmean))
library(Hmsic)
library(Hmisc)
label(which.max(intervalmean))
which.max(intervalmean)
which.max(intervalmean)[1]
str(which.max(intervalmean))
names(which.max(intervalmean))
rm(list=ls())
activitydata<-read.csv("activity.csv")
activitydata$steps<-as.numeric(activitydata$steps)
head(activitydata)
summary(activitydata)
str(activitydata)
intervalmean<-tapply(activitydata$steps,activitydata$interval,mean,na.rm=TRUE)
cat("Interval",names(which.max(intervalmean)),"Average",max(intervalmean))
cat("Interval",names(which.max(intervalmean)),"/n","Average",max(intervalmean))
cat("Interval",names(which.max(intervalmean)),"\n","Average",max(intervalmean))
cat("Interval",names(which.max(intervalmean)),"\n","Average",max(intervalmean))
cat("Interval",names(which.max(intervalmean)),"\n","Average ",max(intervalmean))
activitydata2<-activitydata
for(i in 1:nrow(activitydata2))
{
if(is.na(activitydata2$steps[i]))
{
k<-activitydata2$interval[i]
k<-as.character(k)
activitydata2$steps[i]=intervalmean[intervalmean=k]
}
}
median(totaldailysteps2)
totaldailysteps2<-tapply(activitydata2$steps,activitydata2$date,sum)
library(moments)
skewness(totaldailysteps2)
kurtosis(totaldailysteps2)
median(totaldailysteps2)==mean(totaldailysteps2)
mode(totaldailysteps2)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
Mode(totaldailysteps2)
mean(totaldailysteps2)
median(totaldailysteps2)==mean(totaldailysteps2)
median(totaldailysteps2)
totaldailysteps2<-tapply(activitydata2$steps,activitydata2$date,sum)
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
median(totaldailysteps2)
mean(totaldailysteps2)
Mode(totaldailysteps2)
View(activitydata2)
intervalmean[1:10]
totaldailysteps2
jarque.test(intercalmeans)
jarque.test(intercalmeans2)
jarque.test(totaldailysteps2)
class(totaldailysteps2)
jarque.test(as.vector(totaldailysteps2)
)
totaldailysteps<-tapply(activitydata$steps,activitydata$date,sum,na.rm=TRUE)
hist(totaldailysteps, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps")
plot(x=dimnames(intervalmean)[[1]],y=intervalmean,type="l", main = "Average Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
plot(x=dimnames(intervalmean)[[1]],y=intervalmean,type="l", main = "Average Daily Activity Pattern", xlab = "Intervals - 5 Minutes", ylab = "Interval Means")
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
totaldailysteps<-tapply(activitydata$steps,activitydata$date,sum,na.rm=TRUE)
hist(totaldailysteps, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps")
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
mean(totaldailysteps2)==median(totaldailysteps2)==Mode(totaldailysteps2)
mean(totaldailysteps2)==median(totaldailysteps2)
median(totaldailysteps2)==Mode(totaldailysteps2)
mean(totaldailysteps2,na.rm=FALSE)==median(totaldailysteps2)
mean(totaldailysteps2,na.rm=FALSE)==median(totaldailysteps2,na.rm=FALSE)
View(activitydata)
intervalmean
lines(density(beaver1$temp)
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced",lines=density(totaldailysteps2))
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced")
lines(density(totaldailysteps2))
lines(density(totaldailysteps2), # density plot
lwd = 2, # thickness of line
col = "chocolate3")
hist(totaldailysteps2, xlab = "Total Daily Steps", main = "Histogram of Total Daily Steps with NAs Replaced",prob=TRUE)
lines(density(totaldailysteps2))
IQR
IQR(totaldailysteps2)
IQR(totaldailysteps2)/2
SIQR
Q1
quartile
quantile(ttotaldailysteps2)
quantile(totaldailysteps2)
mean(c(12811,9819))
p <- c(.1, .2, .3, .4)
x <- 2 : 5
mean(x)
mu<-mean(x)
rm(mu)
xbar<-mean(x)
squareddif<-(x-mu)^2
squareddif<-(x-xbar)^2
squareddif*p
sum(squareddif*p)
sum(squareddif*p^2)
indivprob<-p*(x-mu)^2
indivprob<-p*(x-xbar)^2
sum(indivprob)
rbind(x,p)
sum(p*(x-xbar)^2)
sum(x^2*p) - sum(x*p)^2
sum(p*(x-3)^2)
sum(p*(x-4)^2)
sum(p^2*(x-4)^2)
sum(p^2*(x-xbar)^2)
(p*(x-xbar)^2)
p <- c(.1, .2, .3, .4)
x <- 2 : 5
squareddifs<-(x-mean(x))^2
sum(squareddifs*p)
.1*(2-3.5)^2+.2*(3-3.5)^2+.3*(4-3.5)^2+.4*(5-3.5)^2
sum(p)
