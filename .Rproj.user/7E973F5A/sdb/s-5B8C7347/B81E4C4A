{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n\n## Loading and preprocessing the data\n\nWe will import this as a CSV file and leave it as is for this analysis. Let's also make sure everything in each column is in the right format. \n\n```{r}\nactivitydata<-read.csv(\"activity.csv\")\nactivitydata$steps<-as.numeric(activitydata$steps)\nhead(activitydata)\nsummary(activitydata)\nclass(activitydata$steps)\nclass(activitydata$date)\nclass(activitydata$interval)\n```\n\n## What is mean total number of steps taken per day?\n\nHere is a histogram for the total number of steps taken each day:\n\n```{r}\ntotaldailysteps<-tapply(activitydata$steps,activitydata$date,sum,na.rm=TRUE)\nhist(totaldailysteps, xlab = \"Total Daily Steps\", main = \"Histogram of Total Daily Steps\")\n```\n\nHere are the medians of the total number of steps taken each day:\n```{r}\nallmedians<-tapply(activitydata$steps,activitydata$date,median,na.rm=TRUE)\nwrite.table(allmedians,quote = FALSE,col.names=\"Medians\")\n```\n\nHere are the means of the total number of steps take each day:\n```{r}\nallmeans<-tapply(activitydata$steps,activitydata$date,mean,na.rm=TRUE)\nwrite.table(allmeans,quote = FALSE,col.names=\"Means\")\n```\n## What is the average daily activity pattern?\n\nFirst, we will extract the average number of steps per interval. Then we will plot the daily activity pattern.\n\n```{r}\nintervalmean<-tapply(activitydata$steps,activitydata$interval,mean,na.rm=TRUE)\nplot(x=dimnames(intervalmean)[[1]],y=intervalmean,type=\"l\", main = \"Average Daily Activity Pattern\", xlab = \"Intervals - 5 Minutes\", ylab = \"Interval Means\")\n```\n\nThe following 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps:\n\n```{r}\nnames(which.max(intervalmean))\n```\n\n## Imputing missing values\n\nThere seems to be a notable number of missing values. Let's take a look:\n```{r}\nsum(is.na(activitydata$steps))\n```\nLet's try to fill the missing values with the means for those intervals. First, we will create a copy of the data set so we can fill it. Next, we will create a loop to replace the NAs. \n\n```{r}\nactivitydata2<-activitydata\n\nfor(i in 1:nrow(activitydata2))\n    {\n        if(is.na(activitydata2$steps[i]))\n        {\n            k<-activitydata2$interval[i]\n            k<-as.character(k)\n            activitydata2$steps[i]=intervalmean[intervalmean=k]\n        }\n    }\n```\n\nLet's see how filling in the missing values affected the data.\n\n```{r}\ntotaldailysteps2<-tapply(activitydata2$steps,activitydata2$date,sum)\nhist(totaldailysteps2, xlab = \"Total Daily Steps\", main = \"Histogram of Total Daily Steps with NAs Replaced\")\n```\n\nThe data have gravitated more towards the center. What happened to the daily means and medians?\n\nMedians:\n```{r}\nallmedians2<-tapply(activitydata2$steps,activitydata2$date,median)\nwrite.table(allmedians2,quote = FALSE,col.names=\"Medians with Filled NAs\")\n```\n\nMeans:\n```{r}\nallmeans2<-tapply(activitydata2$steps,activitydata2$date,mean)\nwrite.table(allmeans2,quote = FALSE,col.names=\"Means with Filled NAs\")\n```\n\nThese values differ from the estimates from the first part but not by much. The spread of the means has been compressed a little bit tighter around the grand mean, which remained unchanged. Most of the median distribution is still 0 because of the shear number of 0s in the data set. \n\nHow many zeros are there?\n```{r}\nsum(activitydata2$steps==0,na.rm=TRUE)\n\nsum(activitydata$steps==0,na.rm=TRUE)\n```\n\nThere are more zeros in the filled data set because some of the interval means were zero for some days. The loop filled in those intervals with zeros.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nFirst let's create a third data frame to store our changes and remove the factor levels from dates.\n\n```{r}\nactivitydata3<-activitydata\nactivitydata3$date<-as.POSIXlt(activitydata3$date)\n```\n\nNext we will see if the weekday name of the dates column is either a \"Saturday\" or \"Sunday\". The %in% function returns either a TRUE or a FALSE for each date and we will use that to create a new column so we know what part of the week we are in. The labels for this new column will be \"Weekend\" and \"Weekday\".\n\n```{r}\nactivitydata3$weekpart<-factor((weekdays(activitydata3$date) %in% c('Saturday','Sunday')),levels=c(TRUE,FALSE),labels=c('Weekend','Weekday'))\nsummary(activitydata3)\n```\n\nNow let's get the interval means for the Weekends and Weekdays. Frst we will subset the data into two different data frames. We will then get the means for the time intervals in the \"intervalmeanweekday\" and \"intervalmeanweekend\" data frames. We will then combine the interval means into their own matrix. That matrix will then be converted into a time series object in R so it can be plotted using the xyplot function.\n```{r}\nactivitydataweekday<-subset(activitydata3,weekpart==\"Weekday\")\nactivitydataweekend<-subset(activitydata3,weekpart==\"Weekend\")\n\nintervalmeanweekday<-tapply(activitydataweekday$steps,activitydataweekday$interval,mean,na.rm=TRUE)\nintervalmeanweekend<-tapply(activitydataweekend$steps,activitydataweekend$interval,mean,na.rm=TRUE)\n\nweekpartintervalmeans<-cbind(intervalmeanweekend,intervalmeanweekday)\n\ncolnames(weekpartintervalmeans)[1]<-c(\"Weekend\")\ncolnames(weekpartintervalmeans)[2]<-c(\"Weekday\")\n\nweekpartintervalmeans<-as.ts(weekpartintervalmeans)\n\nlibrary(lattice)\n\nxyplot(weekpartintervalmeans,xlab=\"Intervals - 5 Minutes\",ylab=\"Steps\")\n\n```",
    "created" : 1439412901789.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1596505085",
    "id" : "B81E4C4A",
    "lastKnownWriteTime" : 1439489852,
    "path" : "C:/Users/TotallyNotDanny/OneDrive/R/Reproducible Research/Week 2/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}